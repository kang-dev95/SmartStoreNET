@model FileUploader

@{
	Html.AddScriptParts("~/Content/vendors/dropzone/js/dropzone.js");
	Html.AddScriptParts("~/Content/vendors/dropzone/js/dropzoneWrapper.js");

	if (!Model.Name.HasValue())
	{
		Model.Name = "upload-" + CommonHelper.GenerateRandomInteger();
	}

	if (!Model.HtmlAttributes.ContainsKey("id"))
	{
		Model.Id = Model.Name;
	}
}

<div id="@Model.Name" @Html.Attrs(Model.HtmlAttributes)>
	<div class="fileupload">
		<input type="hidden" id="@(Model.Id)-file" name="@(Model.Id)-file" />

		<div class="fileupload-progress">
			<!-- The global progress bar -->
			<div class="progress">
				<div class="progress-bar" role="progressbar" style="width: 0%" aria-valuemin="0" aria-valuemax="100"></div>
			</div>
		</div>

		<div class="fileupload-info mb-3 d-none">
			<div class="fileupload-filename"></div>
			<div class="fileupload-filesize"></div>
		</div>

		<div class="fileupload-buttons">
			<button class="btn btn-danger remove@(Model.Compact ? " btn-sm" : "")" @Html.Attr("style", "display: none", !Model.ShowRemoveButton)>
				<span>@Model.RemoveText</span>
			</button>

			<span class="btn btn-@(Model.ButtonOutlineStyle ? "outline-" : "")@Model.ButtonStyle.ToString().ToLower() fileinput-button@(Model.Compact ? " btn-sm" : "")">
				@if (Model.IconCssClass.HasValue())
				{
					<i class="@Model.IconCssClass"></i>
				}
				<span>@Model.UploadText</span>
				<input type="hidden" id="@(Model.Id)-file" name="@(Model.Id)-file" />
			</span>

			<button class="btn btn-outline-secondary cancel@(Model.Compact ? " btn-sm" : "")" style="display: none">
				<span>@Model.CancelText</span>
			</button>
		</div>
	</div>

	@if (Model.Multifile == true)
	{
		<div class="files-preview d-none" data-product-picture-id="" data-picture-id="">
			<div class="mf-image-preview d-flex flex-column" data-display-order="0">
				<div class="dz-processing dz-image-preview dz-success dz-complete" data-toggle="tooltip"
					 data-html="true"
					 data-placement="bottom"
					 title="">
					<div>
						<span class="preview align-self-center">
							<img data-dz-thumbnail />
						</span>
					</div>
				</div>
				<a href="#" class="btn btn-danger btn-icon btn-sm btn-circle delete-product-picture">
					<i class="far fa-trash-alt"></i>
				</a>
				<a href="#" class="btn btn-primary btn-icon btn-sm btn-circle set-main-picture">
					<i class="far fa-eye"></i>
				</a>
			</div>
		</div>
	}
</div>

<script data-origin="FileUploader">
	$(function () {
		$("#@Model.Id").dropzoneWrapper({
			onUploading: @Html.Raw(Model.OnUploadingHandlerName.HasValue() ? Model.OnUploadingHandlerName : "null"),
			onUploadCompleted: @Html.Raw(Model.OnUploadCompletedHandlerName.HasValue() ? Model.OnUploadCompletedHandlerName : "null"),
			onAborted: @Html.Raw(Model.OnAbortedHandlerName.HasValue() ? Model.OnAbortedHandlerName : "null"),
			onError: @Html.Raw(Model.OnErrorHandlerName.HasValue() ? Model.OnErrorHandlerName : "null"),
			onFileRemove: @Html.Raw(Model.OnFileRemoveHandlerName.HasValue() ? Model.OnFileRemoveHandlerName : "null"),
            onCompleted: @Html.Raw(Model.OnCompletedHandlerName.HasValue() ? Model.OnCompletedHandlerName : "null"),
            maxFiles: @(Model.Multifile ? 10 : 1),
			previewContainerId: "@(Model.Multifile ? Model.PreviewContainerId : "")"
        });
	});
</script>

@*<div @Html.Attrs(Model.HtmlAttributes)>
		<!-- The global progress information -->
		<div class="fileupload-progress fade">
			<!-- The global progress bar -->
			<div class="progress">
				<div class="progress-bar" role="progressbar" style="width: 0%" aria-valuemin="0" aria-valuemax="100"></div>
			</div>
		</div>

		<div class="fileupload-buttons">
			<button class="btn btn-danger remove@(Model.Compact ? " btn-sm" : "")" @Html.Attr("style", "display: none", !Model.ShowRemoveButton)>
				<span>@Model.RemoveText</span>
			</button>

			<span class="btn btn-@(Model.ButtonOutlineStyle ? "outline-" : "")@Model.ButtonStyle.ToString().ToLower() fileinput-button@(Model.Compact ? " btn-sm" : "")">
				@if (Model.IconCssClass.HasValue())
				{
					<i class="@Model.IconCssClass"></i>
				}
				<span>@Model.UploadText</span>
				<input type="file" id="@(Model.Id)-file" name="@(Model.Id)-file" />
			</span>

			<button class="btn btn-outline-secondary cancel@(Model.Compact ? " btn-sm" : "")" style="display: none">
				<span>@Model.CancelText</span>
			</button>
		</div>
	</div>


	<script data-origin="FileUploader">
		$(function () {
			$('#@Model.Id').fileUploadWrapper({
				onUploading: @Html.Raw(Model.OnUploadingHandlerName.HasValue() ? Model.OnUploadingHandlerName : "null"),
				onUploadCompleted: @Html.Raw(Model.OnUploadCompletedHandlerName.HasValue() ? Model.OnUploadCompletedHandlerName : "null"),
				onAborted: @Html.Raw(Model.OnAbortedHandlerName.HasValue() ? Model.OnAbortedHandlerName : "null"),
				onError: @Html.Raw(Model.OnErrorHandlerName.HasValue() ? Model.OnErrorHandlerName : "null"),
				onFileRemove: @Html.Raw(Model.OnFileRemoveHandlerName.HasValue() ? Model.OnFileRemoveHandlerName : "null"),
				onCompleted: @Html.Raw(Model.OnCompletedHandlerName.HasValue() ? Model.OnCompletedHandlerName : "null")
			});
		});
	</script>
*@