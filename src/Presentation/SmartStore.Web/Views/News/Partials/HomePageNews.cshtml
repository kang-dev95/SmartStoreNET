@model HomePageNewsItemsModel
@using SmartStore.Web.Models.News;

@if (Model.NewsItems.Count > 0)
{
    <div class="block news-list-homepage mb-5">
        <div class="row">
            <div class="col">
                <div class="heading">
                    <h3 class="heading-title fs-h1">@T("News")</h3>
                </div>
            </div>
            <div class="col col-auto">
                <a class="btn btn-warning" href="@Url.Action("rss", new { languageId = Model.WorkingLanguageId })" title="@T("News.RSS.Hint")">
                    <i class="fa fa-rss"></i>
                    <span>@T("News.RSS")</span>
                </a>
                <a class="btn btn-outline-info btn-flat" href="@Url.RouteUrl("NewsArchive")">
                    <span>@T("News.ViewAll")</span>
                    <i class="fa fa-angle-right"></i>
                </a>
            </div>
        </div>

        <div class="block-body news-items">

            @if (Model.NewsItems.Count == 1)
            {
                var item = Model.NewsItems.FirstOrDefault();
                var imageUrl = item.PreviewPictureModel.ImageUrl.HasValue() ? item.PreviewPictureModel.ImageUrl : item.PictureModel.ImageUrl;

                <article class="row news-preview-lg" itemscope itemtype="http://schema.org/NewsArticle">
                    @if (imageUrl.HasValue())
                    {
                        <figure class="col-12 col-md-6">
                            <a class="d-flex align-items-center justify-content-center" href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })">
                                <img class="img-fluid" src="@imageUrl" alt="@item.PictureModel.AlternateText" title="@item.PictureModel.Title" itemprop="image">
                            </a>
                        </figure>
                    }

                    <div class="col-12 col-md mt-3 mt-md-0">
                        <h4 class="newsitem-title mb-2">
                            <a class="newsitem-title-link" href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })" itemprop="headline">
                                @item.Title.Truncate(60, "...")
                            </a>
                        </h4>
                        <div class="newsitem-date" itemprop="dateCreated">
                            @item.CreatedOn.ToNativeString("D")
                        </div>
                        <p class="newsitem-description my-3" itemprop="description">
                            @Html.Raw(item.Short)
                        </p>
                        <div>
                            <a class="btn btn-primary" href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })">
                                @T("Common.Cms.ReadMore")
                            </a>
                        </div>
                    </div>
                </article>
            }
            else if (Model.NewsItems.Count <= 4)
            {
                <div class="row">
                    <div class="col-12 col-md-5">
                        @FirstNewsItem(Model.NewsItems.First())
                    </div>
                    <div class="col-12 col-md mt-3 mt-md-0">
                        @NewsItemList(Model.NewsItems.Skip(1), false)
                    </div>
                </div>
            }
            else if (Model.NewsItems.Count > 4)
            {
                int.TryParse((Model.NewsItems.Count / 2).ToString(), out int half);
                var firstColumn = Model.NewsItems.Skip(1).Take(half);
                var secondColumn = Model.NewsItems.Skip(1 + half);

                <div class="row">
                    <div class="col-12 col-md-5">
                        @FirstNewsItem(Model.NewsItems.FirstOrDefault())
                    </div>

                    <div class="col-12 col-md mt-3 mt-md-0">
                        <div class="row">
                            <div class="col">
                                @NewsItemList(firstColumn, true)
                            </div>
                            <div class="col">
                                @NewsItemList(secondColumn, true)
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
}

@helper FirstNewsItem(NewsItemModel item)
{
    var imageUrl = item.PreviewPictureModel.ImageUrl.HasValue() ? item.PreviewPictureModel.ImageUrl : item.PictureModel.ImageUrl;

    <article itemscope itemtype="http://schema.org/NewsArticle">
        @if (imageUrl.HasValue())
        {
            <figure class="shadow-sm-primary mb-4">
                <a href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })">
                    <img class="img-fluid" src="@imageUrl" alt="@item.PictureModel.AlternateText" title="@item.PictureModel.Title" itemprop="image">
                </a>
            </figure>
        }

        <h4 class="newsitem-title mt-3 mb-2">
            <a class="newsitem-title-link" href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })" itemprop="headline">@item.Title</a>
        </h4>

        <div class="newsitem-date" itemprop="datePublished">
            @item.CreatedOn.ToNativeString("D")
        </div>

        <p class="newsitem-description my-3" itemprop="description">
            @Html.Raw(item.Short)
        </p>

        <div>
            <a class="btn btn-primary" href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })">
                @T("Common.Cms.ReadMore")
            </a>
        </div>
    </article>
}

@helper NewsItemList(IEnumerable<NewsItemModel> items, bool isMinimal)
{
    foreach (var item in items)
    {
        var imageUrl = item.PreviewPictureModel.ImageUrl.HasValue() ? item.PreviewPictureModel.ImageUrl : item.PictureModel.ImageUrl;
        var btnClasses = isMinimal ? "p-0" : "btn btn-sm btn-primary";

        <article class="row sm-gutters mb-4 @(isMinimal ? "news-preview-xs" : "news-preview-sm")" itemscope itemtype="http://schema.org/NewsArticle">
            @if (imageUrl.HasValue())
            {
                <div class="col-12 col-md-4">
                    <a class="newsitem-picture shadow-sm-primary img-center-container" href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })">
                        <img class="img-fluid" src="@imageUrl" alt="@item.PictureModel.AlternateText" title="@item.PictureModel.Title" itemprop="image">
                    </a>
                </div>
            }

            <div class="col-12 col-md mt-3 mt-md-0">
                <h4 class="newsitem-title @(isMinimal ? "mb-1" : "mb-2")">
                    <a class="newsitem-title-link" href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })" itemprop="headline">
                        @item.Title.Truncate(80, "...")
                    </a>
                </h4>

                <div class="newsitem-date mb-1" itemprop="datePublished">
                    @item.CreatedOn.ToNativeString("D")
                </div>

                @if (!isMinimal)
                {
                    <p class="newsitem-description" itemprop="description">
                        @Html.Raw(item.Short.Truncate(110, "..."))
                    </p>
                }

                <div class="mt-1">
                    <a class="@btnClasses" href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })">
                        @T("Common.Cms.ReadMore")
                    </a>
                </div>
            </div>
        </article>
    }
}