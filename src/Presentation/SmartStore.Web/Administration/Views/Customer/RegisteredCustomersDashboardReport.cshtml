@model DashboardChartReportModel
@using Newtonsoft.Json;
@{
    var jsonData = JsonConvert.SerializeObject(Model);
}
<script src="~/Administration/Scripts/Chart.js"></script>

<div class="report">
    <div class="report-title-row">
        <div class="report-title pr-1">@T("Admin.Report.CustomerRegistrations")</div>

        <div class="pl-3 fs-h5">
            <span id="customer-quantity-total" class="text-muted"></span>
        </div>

        <div class="pl-3 fs-h6 font-weight-bold">
            <span id="customers-delta-percentage"></span><span id="customers-delta-percentage-chevron" class="chevron pl-1 d-none"></span>
        </div>

        <div class="btn-group btn-group-toggle ml-auto" data-toggle="buttons">
            <label class="btn btn-secondary btn-dashboard active">
                <input type="radio" name="customers-toggle" data-period="0" autocomplete="off" checked>
                @T("Admin.Report.Today")
            </label>
            <label class="btn btn-secondary btn-dashboard">
                <input type="radio" name="customers-toggle" data-period="1" autocomplete="off">
                @T("Admin.Report.Yesterday")
            </label>
            <label class="btn btn-secondary btn-dashboard">
                <input type="radio" name="customers-toggle" data-period="2" autocomplete="off">
                @T("Admin.Report.LastWeek")
            </label>
            <label class="btn btn-secondary btn-dashboard">
                <input type="radio" name="customers-toggle" data-period="3" autocomplete="off">
                @T("Admin.Report.LastMonth")
            </label>
            <label class="btn btn-secondary btn-dashboard">
                <input type="radio" name="customers-toggle" data-period="4" autocomplete="off">
                @T("Admin.Report.ThisYear")
            </label>
        </div>
    </div>
    <div class="canvas-container w-100 h-100 mt-2" style="min-height: 400px; max-height: 400px">
        <canvas id="customers-chart"></canvas>
    </div>
</div>

<script>
    $(function () {
        var customersData = JSON.parse('@Html.Raw(jsonData)');
        var percentageElement = $("#customers-delta-percentage");
        var chevronElement = $("#customers-delta-percentage-chevron");
        var sumElement = $("#customer-quantity-total");
        var currentPeriod = 0;
        var style = getComputedStyle(document.body);
        var colorSuccess = style.getPropertyValue('--success');
        var fontFamily = style.getPropertyValue('--font-family-sans-serif');

        var customersChartElement = $('#customers-chart')[0];
        var customers_ctx = customersChartElement.getContext('2d');
        var successGradient = customers_ctx.createLinearGradient(0, 0, 0, customersChartElement.clientHeight / 0.8);
        successGradient.addColorStop(0, 'rgb(231,245,239)');
        successGradient.addColorStop(1, 'white');

        // Chart.js
        //----------------------------------------------------

        var customer_config = {
            type: 'line',
            data: {
                labels: customersData.Reports[0].Labels,
                datasets: [{
                    label: '@T("Admin.Report.CustomerRegistrations")',
                    data: customersData.Reports[0].DataSets[0].Quantity,
                    borderColor: colorSuccess,
                    backgroundColor: successGradient,
                    pointHoverBackgroundColor: colorSuccess,
                    pointHoverBorderColor: 'transparent',
                }]
            },
            options: {
                responsive: true,
                responsiveAnimationDuration: 0,
                maintainAspectRatio: false,
                stacked: true,
                animation: {
                    duration: 400,
                    hide: {
                        visible: {
                            type: true,
                            easing: 'easeInOutSine'
                        },
                    },
                    easing: 'easeInOutSine',

                },
                hover: {
                    mode: 'nearest',
                    intersect: false,
                },
                layout: {
                    padding: {
                        left: 0,
                        right: 0,
                        top: 7,
                        bottom: 0
                    }
                },
                legend: false,
                elements: {
                    point: {
                        radius: 0,
                        hoverRadius: 6,
                        hitRadius: 3,
                    },
                    line: {
                        borderWidth: 1,
                        lineTension: 0.2,
                        fill: true,
                    }
                },
                tooltips: {
                    enabled: true,
                    mode: 'nearest',
                    intersect: false,
                    titleFontFamily: fontFamily,
                    bodyFontFamily: fontFamily,
                    xPadding: 10,
                    yPadding: 8,
                    caretPadding: 6,
                    caretSize: 8,
                    cornerRadius: 4,
                    titleMarginBottom: 8,
                    bodySpacing: 5,
                    callbacks: {
                        label: function (item, data) {
                            return " " + customersData.Reports[currentPeriod].DataSets[item.datasetIndex].FormattedAmount[item.index];
                        },
                        labelColor: function(tooltipItem, chart) {
                            var dataset = chart.config.data.datasets[tooltipItem.datasetIndex];
                            return {
                                backgroundColor: dataset.borderColor,
                            }
                        },
                    },
                },
                scales: {
                    yAxes: [{
                        display: false,
                        stacked: true,
                    }],
                    xAxes: [{
                        display: false,
                        gridLines: {
                            display: false,
                        },
                        scaleLabel: {
                            display: false,
                            padding: 0,
                        },
                    }]
                },
                title: {
                    display: false,
                }
            },
        }

        var customersChart = new Chart(customers_ctx, customer_config);
        setPercentageDelta(currentPeriod);

        // EventHandler
        //----------------------------------------------------

        $('input[type=radio][name=customers-toggle]').on('change', function () {
            setChartData($('input:radio[name=customers-toggle]:checked').data("period"));
        });

        // Functions
        //----------------------------------------------------

        function setPercentageDelta(period) {
            var val = customersData.Reports[period].PercentageDelta;
            if (val < 0) {
                chevronElement.addClass("negative");
                chevronElement.removeClass("d-none");
                percentageElement.removeClass("text-success");
                percentageElement.addClass("text-danger");
            }
            else if (val > 0) {
                chevronElement.removeClass("negative");
                chevronElement.removeClass("d-none");
                percentageElement.addClass("text-success");
                percentageElement.removeClass("text-danger");
            }
            else {
                chevronElement.addClass("d-none")
            }
            var delta = val == 0 ? "" : val < 0 ? "-" + Math.abs(val) + "%" : "+" + Math.abs(val) + "%";
            percentageElement.html(delta);
            sumElement.html(customersData.Reports[period].TotalAmount);
        }

        function setChartData(period) {
            customersChart.destroy();
            customer_config.data.labels = customersData.Reports[period].Labels;
            for (var i = 0; i < customer_config.data.datasets.length; i++) {
                customer_config.data.datasets[i].data = customersData.Reports[period].DataSets[i].Quantity;
            }
            customersChart = new Chart(customers_ctx, customer_config);
            setPercentageDelta(period, customersData);
            currentPeriod = period;
        }
    });
</script>