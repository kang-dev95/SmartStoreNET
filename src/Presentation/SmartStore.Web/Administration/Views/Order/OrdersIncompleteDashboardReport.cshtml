@model OrdersIncompleteDashboardReportModel
@using Newtonsoft.Json;
@{
    var jsonData = JsonConvert.SerializeObject(Model);
}

<div class="report">
    <div class="report-title-row">
        <div class="report-title">@T("Admin.SalesReport.Incomplete")</div>
    </div>
    <div class="incomplete-orders-chart-text">
        <div class="font-weight-bold fs-h4">2.123</div>
        <div class="pt-1 small">@T("Admin.SalesReport.Incomplete")</div>
    </div>
    <div class="canvas-container" style="height: 75%; transform: translateY(29px); pointer-events: none">
        <canvas id="incomplete-orders-chart" width="5" height="3" style="width: 100%; pointer-events: all">
            Your browser does not support the HTML5 canvas tag. // Errors
        </canvas>
    </div>
</div>

<style>
</style>

<script>

    var dataSets = JSON.parse('@Html.Raw(jsonData)');

    var colorIndigo = style.getPropertyValue('--danger');
    var colorWarning = style.getPropertyValue('--warning');
    var fontFamily = style.getPropertyValue('--font-family');
    var bgColor = [colorIndigo, colorWarning];

    var $incompleteOrdersChartElement = $('#incomplete-orders-chart')[0];
    var $incompleteOrdersCtx = $incompleteOrdersChartElement.getContext('2d');

    console.log($incompleteOrdersChartElement.clientWidth);

    var indigoGradient = $incompleteOrdersCtx.createRadialGradient(
        $incompleteOrdersChartElement.clientWidth / 2,
        $incompleteOrdersChartElement.clientHeight / 2,
        $incompleteOrdersChartElement.clientWidth / 6,
        $incompleteOrdersChartElement.clientWidth / 2,
        $incompleteOrdersChartElement.clientHeight / 2,
        $incompleteOrdersChartElement.clientWidth / 3.6
    );
    indigoGradient.addColorStop(0, colorIndigo);
    indigoGradient.addColorStop(0.65, colorIndigo);
    indigoGradient.addColorStop(1, 'white');

    var warningGradient = $incompleteOrdersCtx.createRadialGradient(
        $incompleteOrdersChartElement.clientWidth / 2,
        $incompleteOrdersChartElement.clientHeight / 2,
        $incompleteOrdersChartElement.clientWidth / 6,
        $incompleteOrdersChartElement.clientWidth / 2,
        $incompleteOrdersChartElement.clientHeight / 2,
        $incompleteOrdersChartElement.clientWidth / 3.6
    );
    warningGradient.addColorStop(0, colorWarning);
    warningGradient.addColorStop(0.65, colorWarning);
    warningGradient.addColorStop(1, 'white');

    var data = {
        labels: ["@T("Admin.SalesReport.Incomplete.TotalNotShippedOrders")","@T("Admin.SalesReport.Incomplete.TotalUnpaidOrders")"],
        datasets: [{
            data: [dataSets.Reports[0].Quantity, dataSets.Reports[1].Quantity],
            backgroundColor: [indigoGradient, warningGradient],
            borderAlign: 'center',
            borderColor: '#fff',
            borderWidth: 10,
            weight: 1,
            hoverBackgroundColor: [indigoGradient, warningGradient],
            hoverBorderColor: '#fff',
            hoverBorderWidth: 0,
        }],
    };

    var options = {
        responsive: true,
        responsiveAnimationDuration: 1000,
        maintainAspectRatio: false,
        cutoutPercentage: 80,
        rotation: -0.5 * Math.PI,
        circumfernce: 2 * Math.PI,
        animation: {
            animateRotate: true,
            animateScale: true,
            duration: 1000,
            easing: 'easeInOutSine',
        },
        layout: {
            padding: {
                left: 0,
                right: 0,
                top: 5,
                bottom: 25
            }
        },
        legend: false,
        tooltips: {
            enabled: true,
            mode: 'nearest',
            intersect: true,
            titleFontFamily: fontFamily,
            bodyFontFamily: fontFamily,
            xPadding: 10,
            yPadding: 8,
            caretPadding: 6,
            caretSize: 8,
            cornerRadius: 4,
            titleMarginBottom: 8,
            bodySpacing: 5,
            //callbacks: {
            //    label: function (item) {
            //        return ordersData.Reports[currentPeriod].DataSets[item.datasetIndex].FormattedAmount[item.index];
            //    }
            //}
        },
        //title: {
        //    display: false,
        //}
    };

    var myDoughnutChart = new Chart($incompleteOrdersCtx, {
        type: 'doughnut',
        data: data,
        options: options
    });
</script>

@*<div class="card shadow-sm mb-4">
        <h6 class="card-header font-weight-medium border-bottom-0">
            <i class="fa fa-signal pr-2"></i>
            @T("Admin.SalesReport.Incomplete")
        </h6>

        <div class="table-responsive">
            <table class="table table-striped m-0">
                <thead>
                    <tr>
                        <th>@T("Admin.SalesReport.Incomplete.Item")</th>
                        <th>@T("Admin.SalesReport.Incomplete.Total")</th>
                        <th>@T("Admin.SalesReport.Incomplete.Count")</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var x in Model)
                    {
                        <tr>
                            <td>
                                @if (x.Url.HasValue())
                                {
                                    <a href="@x.Url">@x.Item</a>
                                }
                                else
                                {
                                    @x.Item
                                }
                            </td>
                            <td>@x.Total</td>
                            <td>@x.Count</td>
                        </tr>
                    }
                    <tr>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>*@