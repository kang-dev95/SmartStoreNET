@model OrdersIncompleteDashboardReportModel
@using Newtonsoft.Json;
@{
    var jsonData = JsonConvert.SerializeObject(Model);
}
<script src="~/Administration/Scripts/Chart.js"></script>

<div class="report">
    <div class="report-title-row">
        <div class="report-title">@T("Admin.SalesReport.Incomplete")</div>
    </div>
    <div class="d-flex justify-content-between px-4 pt-4">
        <div class="chart-title text-muted">@T("Admin.Report.Today")</div>
        <div class="chart-title text-muted">@T("Admin.Report.Yesterday")</div>
        <div class="chart-title text-muted">@T("Admin.Report.LastWeek")</div>
        <div class="chart-title text-muted">@T("Admin.Report.LastMonth")</div>
        <div class="chart-title text-muted">@T("Admin.Report.Overall")</div>
    </div>
    <div class="d-flex justify-content-between px-4 pb-4" style="height: 300px">
        <div class="incomplete-orders-chart-container">
            <div class="incomplete-orders-chart-text">
                <div class="fs-h4 text-bold fade-in">@Model.Reports[0].QuantityTotal</div>
                <div class="fs-h5 fade-in">@Model.Reports[0].AmountTotal</div>
            </div>
            <div class="canvas-container w-100 h-100">
                <canvas id="incomplete-orders-chart-day">
                </canvas>
            </div>
        </div>
        <div class="incomplete-orders-chart-container">
            <div class="incomplete-orders-chart-text">
                <div class="fs-h4 text-bold fade-in">@Model.Reports[1].QuantityTotal</div>
                <div class="fs-h5 fade-in">@Model.Reports[1].AmountTotal</div>
            </div>
            <div class="canvas-container w-100 h-100">
                <canvas id="incomplete-orders-chart-yesterday">
                </canvas>
            </div>
        </div>
        <div class="incomplete-orders-chart-container">
            <div class="incomplete-orders-chart-text">
                <div class="fs-h4 text-bold fade-in">@Model.Reports[2].QuantityTotal</div>
                <div class="fs-h5 fade-in">@Model.Reports[2].AmountTotal</div>
            </div>
            <div class="canvas-container w-100 h-100">
                <canvas id="incomplete-orders-chart-week">
                </canvas>
            </div>
        </div>
        <div class="incomplete-orders-chart-container">
            <div class="incomplete-orders-chart-text">
                <div class="fs-h4 text-bold fade-in">@Model.Reports[3].QuantityTotal</div>
                <div class="fs-h5 fade-in">@Model.Reports[3].AmountTotal</div>
            </div>
            <div class="canvas-container w-100 h-100">
                <canvas id="incomplete-orders-chart-month">
                </canvas>
            </div>
        </div>
        <div class="incomplete-orders-chart-container">
            <div class="incomplete-orders-chart-text">
                <div class="fs-h4 text-bold fade-in">@Model.Reports[3].QuantityTotal</div>
                <div class="fs-h5 fade-in">@Model.Reports[3].AmountTotal</div>
            </div>
            <div class="canvas-container w-100 h-100">
                <canvas id="incomplete-orders-chart-overall">
                </canvas>
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        var style = getComputedStyle(document.body);
        var colorPrimaryLighter = style.getPropertyValue('--primary-light');
        var colorPrimary = style.getPropertyValue('--primary');
        var colorPrimaryDarker = style.getPropertyValue('--primary-dark');
        var fontFamily = style.getPropertyValue('--font-family');

        var dataSets = JSON.parse('@Html.Raw(jsonData)');
        for (var i = 0; i < dataSets.Reports.length; i++) {
            if (dataSets.Reports[i].Data[0].Quantity == 0 && dataSets.Reports[i].Data[1].Quantity == 0) {
                dataSets.Reports[i].Data[2].Quantity = 1
            }
        }

        var options = {
            responsive: true,
            responsiveAnimationDuration: 0,
            maintainAspectRatio: false,
            cutoutPercentage: 80,
            rotation: -0.5 * Math.PI,
            circumfernce: 2 * Math.PI,
            animation: {
                animateRotate: true,
                animateScale: true,
                duration: 1000,
                easing: 'easeInOutSine',
            },
            layout: {
                padding: {
                    left: 0,
                    right: 0,
                    top: 10,
                    bottom: 10
                }
            },
            hover: {
                animationDuration: 250,
            },
            legend: false,
            tooltips: {
                enabled: true,
                mode: 'nearest',
                intersect: true,
                titleFontFamily: fontFamily,
                bodyFontFamily: fontFamily,
                xPadding: 10,
                yPadding: 8,
                caretPadding: 6,
                caretSize: 8,
                cornerRadius: 4,
                titleMarginBottom: 8,
                bodySpacing: 5,
                callbacks: {
                    label: function (item, data) {
                        if (item.index == 2 && data.datasets[0].data[0] == 0 && data.datasets[0].data[1] == 0) {
                            return " " + '@T("Admin.SalesReport.NoIncompleteOrders")';
                        }
                        return " " + data.labels[item.index] + ": " + dataSets.Reports[this._chart.id + alreadyExistingCharts].Data[item.index].QuantityFormatted
                            + ", " + dataSets.Reports[this._chart.id + alreadyExistingCharts].Data[item.index].AmountFormatted; 
                    },
                }
            },
        };

        var dataDay = {
            labels: ["@T("Admin.SalesReport.Incomplete.TotalNotShippedOrders")", "@T("Admin.SalesReport.Incomplete.TotalUnpaidOrders")", "@T("Admin.SalesReport.NewOrders")"],
            datasets: [{
                data: [dataSets.Reports[0].Data[0].Quantity, dataSets.Reports[0].Data[1].Quantity, dataSets.Reports[0].Data[2].Quantity],
                backgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                borderAlign: 'center',
                borderColor: '#fff',
                borderWidth: 10,
                weight: 1,
                hoverBackgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                hoverBorderColor: '#fff',
                hoverBorderWidth: 0,
            },{
                data: [dataSets.Reports[0].Data[0].Amount, dataSets.Reports[0].Data[1].Amount, dataSets.Reports[0].Data[2].Amount],
                backgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                borderAlign: 'center',
                borderColor: '#fff',
                borderWidth: 10,
                weight: 1,
                hoverBackgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                hoverBorderColor: '#fff',
                hoverBorderWidth: 0,
                hidden: true,
            }],
        };
        var chartDay = new Chart(
            $('#incomplete-orders-chart-day')[0].getContext('2d'),
            {
                type: 'doughnut',
                data: dataDay,
                options: options
            }
        );
        var alreadyExistingCharts = chartDay.id;

        var dataYesterday = {
            labels: ["@T("Admin.SalesReport.Incomplete.TotalNotShippedOrders")", "@T("Admin.SalesReport.Incomplete.TotalUnpaidOrders")", "@T("Admin.SalesReport.NewOrders")"],
            datasets: [{
                data: [dataSets.Reports[1].Data[0].Quantity, dataSets.Reports[1].Data[1].Quantity, dataSets.Reports[1].Data[2].Quantity],
                backgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                borderAlign: 'center',
                borderColor: '#fff',
                borderWidth: 10,
                weight: 1,
                hoverBackgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                hoverBorderColor: '#fff',
                hoverBorderWidth: 0,
            },{
                data: [dataSets.Reports[1].Data[0].Amount, dataSets.Reports[1].Data[1].Amount, dataSets.Reports[1].Data[2].Amount],
                backgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                borderAlign: 'center',
                borderColor: '#fff',
                borderWidth: 10,
                weight: 1,
                hoverBackgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                hoverBorderColor: '#fff',
                hoverBorderWidth: 0,
                hidden: true,
            }],
        };
        var chartYesterday = new Chart(
            $('#incomplete-orders-chart-yesterday')[0].getContext('2d'),
            {
                type: 'doughnut',
                data: dataYesterday,
                options: options
            }
        );

        var dataWeek = {
            labels: ["@T("Admin.SalesReport.Incomplete.TotalNotShippedOrders")", "@T("Admin.SalesReport.Incomplete.TotalUnpaidOrders")", "@T("Admin.SalesReport.NewOrders")"],
            datasets: [{
                data: [dataSets.Reports[2].Data[0].Quantity, dataSets.Reports[2].Data[1].Quantity, dataSets.Reports[2].Data[2].Quantity],
                backgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                borderAlign: 'center',
                borderColor: '#fff',
                borderWidth: 10,
                weight: 1,
                hoverBackgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                hoverBorderColor: '#fff',
                hoverBorderWidth: 0,
            },{
                data: [dataSets.Reports[2].Data[0].Amount, dataSets.Reports[2].Data[1].Amount, dataSets.Reports[2].Data[2].Amount],
                backgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                borderAlign: 'center',
                borderColor: '#fff',
                borderWidth: 10,
                weight: 1,
                hoverBackgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                hoverBorderColor: '#fff',
                hoverBorderWidth: 0,
                hidden: true,
            }],
        };
        var chartWeek = new Chart(
            $('#incomplete-orders-chart-week')[0].getContext('2d'),
            {
                type: 'doughnut',
                data: dataWeek,
                options: options
            }
        );

        var dataMonth = {
            labels: ["@T("Admin.SalesReport.Incomplete.TotalNotShippedOrders")", "@T("Admin.SalesReport.Incomplete.TotalUnpaidOrders")", "@T("Admin.SalesReport.NewOrders")"],
            datasets: [{
                data: [dataSets.Reports[3].Data[0].Quantity, dataSets.Reports[3].Data[1].Quantity, dataSets.Reports[3].Data[2].Quantity],
                backgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                borderAlign: 'center',
                borderColor: '#fff',
                borderWidth: 10,
                weight: 1,
                hoverBackgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                hoverBorderColor: '#fff',
                hoverBorderWidth: 0,
            },{
                data: [dataSets.Reports[3].Data[0].Amount, dataSets.Reports[3].Data[1].Amount, dataSets.Reports[3].Data[2].Amount],
                backgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                borderAlign: 'center',
                borderColor: '#fff',
                borderWidth: 10,
                weight: 1,
                hoverBackgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                hoverBorderColor: '#fff',
                hoverBorderWidth: 0,
                hidden: true,
            }],
        };
        var chartMonth = new Chart(
            $('#incomplete-orders-chart-month')[0].getContext('2d'),
            {
                type: 'doughnut',
                data: dataMonth,
                options: options
            }
        );

        var dataOverall = {
            labels: ["@T("Admin.SalesReport.Incomplete.TotalNotShippedOrders")", "@T("Admin.SalesReport.Incomplete.TotalUnpaidOrders")", "@T("Admin.SalesReport.NewOrders")"],
            datasets: [{
                data: [dataSets.Reports[4].Data[0].Quantity, dataSets.Reports[4].Data[1].Quantity, dataSets.Reports[4].Data[2].Quantity],
                backgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                borderAlign: 'center',
                borderColor: '#fff',
                borderWidth: 10,
                weight: 1,
                hoverBackgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                hoverBorderColor: '#fff',
                hoverBorderWidth: 0,
            },{
                data: [dataSets.Reports[4].Data[0].Amount, dataSets.Reports[4].Data[1].Amount, dataSets.Reports[4].Data[2].Amount],
                backgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                borderAlign: 'center',
                borderColor: '#fff',
                borderWidth: 10,
                weight: 1,
                hoverBackgroundColor: [colorPrimary, colorPrimaryDarker, colorPrimaryLighter],
                hoverBorderColor: '#fff',
                hoverBorderWidth: 0,
                hidden: true,
            }],
        };
        var chartOverall = new Chart(
            $('#incomplete-orders-chart-overall')[0].getContext('2d'),
            {
                type: 'doughnut',
                data: dataOverall,
                options: options
            }
        );
    });
</script>