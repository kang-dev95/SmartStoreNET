@using SmartStore.AmazonPay
@model SmartStore.AmazonPay.Models.AmazonPayViewModel
@{
	Html.AddCssFileParts(true, Url.Content("~/Plugins/SmartStore.AmazonPay/Content/SmartStore.AmazonPay.css"));
}

<script>
	window.onAmazonLoginReady = function () {
		try {
			amazon.Login.setClientId('@Html.Raw(Model.ClientId)');
		}
		catch (e) {
			console.log(e);
		}
	};

	window.onAmazonPaymentsReady = function () {
		try {
			new OffAmazonPayments.Widgets.AddressBook({
				sellerId: '@Model.SellerId',
				amazonOrderReferenceId: '@Model.OrderReferenceId',
				displayMode: 'Read',
				design: {
					designMode: 'responsive'
				},
				onError: function (e) {
					console.log(e.getErrorCode() + ': ' + e.getErrorMessage());
				}
			}).bind('amazon-pay-read-address-book-widget');
		}
		catch (e) {
			console.log(e);
		}

		try {
			new OffAmazonPayments.Widgets.Wallet({
				sellerId: '@Model.SellerId',
				amazonOrderReferenceId: '@Model.OrderReferenceId',
				displayMode: 'Read',
				design: {
					designMode: 'responsive'
				},
				onError: function (e) {
					console.log(e.getErrorCode() + ': ' + e.getErrorMessage());
				}
			}).bind('amazon-pay-read-wallet-widget');
		}
		catch (e) {
			console.log(e);
		}
    };

    $(function () {
        // Confirmation flow.
        var isConfirmed = @(Model.IsConfirmed.ToString().ToLower());

        if (isConfirmed) {
            // Restore form data.
            var data = JSON.parse('@Model.FormData');
            var form = $('#confirm-order-form');

            jQuery.each(data, function (i, item) {
                form.find('[name="' + item.name + '"]').val(item.value);
            });

            // Submit form.
            $('.btn-buy').trigger('click');
        }

        $(document).on('submitOrder', function (e) {
            e.isOrderValid = isConfirmed;

            if (!isConfirmed) {
                var data = $('#confirm-order-form').serializeArray();

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ConfirmOrder", "AmazonPayCheckout", new { area = AmazonPayPlugin.SystemName })',
                    data: { "formData": JSON.stringify(data) },
                    success: function (response) {
                        if (response.success) {
                            OffAmazonPayments.triggerPostOrderFlow('@Model.SellerId', '@Model.OrderReferenceId');
                        }
                        else if (!_.isEmpty(response.redirectUrl)) {
                            // Handled server side. Reject AmazonPay and redirect to payment list.
                            window.location = response.redirectUrl;
                        }
                    },
                    error: function (objXml) {
                        if (objXml != null && objXml.responseText != null && objXml.responseText !== '') {
                            displayNotification(objXml.responseText, 'error');
                        }
                    }
                });
            }
		});
    });
</script>
<script async="async" src="@Html.Raw(Model.WidgetUrl)"></script>
