@using SmartStore.PayPal;
@using SmartStore.PayPal.Services;
@model FinancingOptions
@{
    var option = Model.Qualified.FirstOrDefault(x => x.MonthlyPayment.Amount > decimal.Zero && x.AnnualPercentageRate == decimal.Zero);

    if (option == null)
    {
        option = Model.Qualified
            .Where(x => x.MonthlyPayment.Amount > decimal.Zero)
            .OrderByDescending(x => x.AnnualPercentageRate)
            .ThenBy(x => x.MonthlyPayment.Amount)
            .FirstOrDefault();
    }
}
<div class="paypal-promotion card flex-row flex-wrap mt-3 p-2">
    @if (Model.Promotion == PayPalPromotion.FinancingExample && option != null && option.AnnualPercentageRate > decimal.Zero)
    {
        <div class="card-block">
            <div class="font-weight-medium">@T("Plugins.Payments.PayPalInstalments.FinancingPerXMonth", option.MonthlyPayment.ToString(), option.Term)</div>
            <div>@T("Plugins.Payments.PayPalInstalments.FinancingExampleIntro"):</div>
            <div class="m-1 pl-3 pr-3">
                <table class="w-100">
                    <tr>
                        @*German: Darlehehnsbetrag.*@
                        <td>@T("Plugins.Payments.PayPalInstalments.NetLoanAmount"):</td>
                        <td class="text-right font-weight-medium text-nowrap">@(Model.NetLoanAmount.ToString())</td>
                    </tr>
                    <tr>
                        @*German: Nominalzins. Is the same as Sollzins.*@
                        <td>@T("Plugins.Payments.PayPalInstalments.FixedNominalRate"):</td>
                        <td class="text-right font-weight-medium text-nowrap">@(Math.Round(option.NominalRate, 2).ToString("0.00")) %</td>
                    </tr>
                    <tr>
                        @*German: Effektivzins.*@
                        <td>@T("Plugins.Payments.PayPalInstalments.AnnualPercentageRate"):</td>
                        <td class="text-right font-weight-medium text-nowrap">@(Math.Round(option.AnnualPercentageRate, 2).ToString("0.00")) %</td>
                    </tr>
                    <tr>
                        @*MonthlyPayment * Term != TotalCost --> last monthly payment is different\lower.*@
                        <td>@T("Plugins.Payments.PayPalInstalments.TotalPayableAmount"):</td>
                        <td class="text-right font-weight-medium text-nowrap">@(option.TotalCost.ToString())</td>
                    </tr>
                    <tr>
                        <td>@T("Plugins.Payments.PayPalInstalments.XMonthlyInstalmentsAmount", option.Term):</td>
                        <td class="text-right font-weight-medium text-nowrap">@(option.MonthlyPayment.ToString())</td>
                    </tr>
                </table>
            </div>
            <div class="small">@T("Plugins.Payments.PayPalInstalments.Lender"): @Html.Raw(Model.Lender)</div>
		    <div class="font-weight-bold mt-1"><a id="paypal-promotion-link" href="javascript:void(0)" rel="nofollow">@T("Plugins.Payments.PayPalInstalments.RatesInformation")</a></div>
        </div>
    }
    else
    {
        <div class="card-header border-0 bg-transparent p-0">
	        <img class="pr-2" src="@Url.Content("~/Plugins/SmartStore.PayPal/Content/instalments-sm.png")" 
		            alt="@T("Plugins.FriendlyName.Payments.PayPalInstalments")" title="@T("Plugins.FriendlyName.Payments.PayPalInstalments")" />
        </div>
	    <div class="card-block pl-1" style="margin-top: -3px;">
            <div>
                @if (option != null)
                {
                    @T("Plugins.Payments.PayPalInstalments.FinancingPerMonth", option.MonthlyPayment.ToString())
                }
                else
                {
                    @T("Plugins.Payments.PayPalInstalments.FinancingWanted")
                }
            </div>
		    <div>
			    <a id="paypal-promotion-link" href="javascript:void(0)" rel="nofollow">@T("Plugins.Payments.PayPalInstalments.RatesInformation")</a>
		    </div>
	    </div>
    }
</div>

@{
    using (Html.BeginZoneContent("end", key: "pp-instalments-promotion-modal"))
    {
        Html.SmartStore().Window()
            .Name("paypal-promotion-modal")
            .Size(WindowSize.FlexSmall)
            .RenderAtPageEnd(true)
            .FooterContent(@<text><button class="btn btn-secondary btn-flat" data-dismiss="modal">@T("Common.Cancel")</button></text>)
            .Render();
    }
}

<script>
	$(function () {
		$('#paypal-promotion-link').on('click', function (e) {
			e.preventDefault();
            var dialog = $('#paypal-promotion-modal');
            dialog.find('.modal-body').html(window.createCircularSpinner(50, true));

			$.ajax({
				type: 'GET',
				url: '@Url.Action("PromotionDetails", "PayPalInstalments", new { area = Plugin.SystemName, amount = Model.NetLoanAmount.Amount })',
				success: function (response) {
					dialog.find('.modal-body').html(response);
				},
				error: function (objXml) {
					if (objXml != null && objXml.responseText != null && objXml.responseText !== '') {
						displayNotification(objXml.responseText, 'error');
					}
				}
			});

            dialog.modal('show');
            return false;
		});
	});
</script>